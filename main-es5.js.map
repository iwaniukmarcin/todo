{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.ts","src/app/app.component.html","src/app/app.module.ts","src/app/keys.pipe.ts","src/app/task-detail/task-detail.component.ts","src/app/task-detail/task-detail.component.html","src/app/tasks/tasks.component.ts","src/app/tasks/tasks.component.html","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","<app-tasks></app-tasks>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { TasksComponent } from './tasks/tasks.component';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule  } from '@angular/core';\r\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\nimport { KeysPipe } from './keys.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TasksComponent,\r\n    TaskDetailComponent,\r\n    KeysPipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule\r\n  ],\r\n  exports: [\r\n    TasksComponent,\r\n    TaskDetailComponent\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'keys'\n})\nexport class KeysPipe implements PipeTransform {\n\n  transform(value:object|Map<any, any>): any {\n    if(value instanceof Map){ return Array.from(value.keys()); }\n    return Object.keys(value);\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-task-detail',\r\n  templateUrl: './task-detail.component.html',\r\n  styleUrls: ['./task-detail.component.css'],\r\n  inputs: ['task']\r\n})\r\nexport class TaskDetailComponent implements OnInit {\r\n  task : any;\r\n  @Output() close = new EventEmitter<void>();\r\n\r\n  constructor() { }\r\n  \r\n  ngOnInit() {\r\n  }\r\n\r\n  \r\n  onClose() {\r\n    this.close.emit()\r\n  }\r\n}\r\n","\r\n\r\n<div class=\"backdrop\">\r\n    <div class=\"alert-box\">\r\n        <div class=\"col-md-12\">\r\n            <h3>Task:\r\n                <input [(ngModel)]=\"task.title\" class=\"input-lg\"  type=\"text\"></h3>\r\n            <h3>Date:\r\n                <input [(ngModel)]=\"task.date\" class=\"input-lg\" type=\"text\"></h3>\r\n            </div>\r\n        <div class=\"alert-box-actions\">\r\n            <button class=\"btn btn-info btn-sm mr-2\" (click)=\"onClose()\">Save & close</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport  *  as  data  from  '../data.json';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-tasks',\r\n  templateUrl: './tasks.component.html',\r\n  styleUrls: ['./tasks.component.css']\r\n})\r\n\r\nexport class TasksComponent implements OnInit {\r\n\r\n\r\n  mockData: any  = (data  as  any).default;\r\n  show: boolean = false;\r\n  value: string;\r\n  id: number;\r\n  selectedTask = {};\r\n  datagrouped = _.groupBy(this.mockData, \"date\");\r\n\r\n  constructor() {}\r\n  \r\n// entry data grouping function\r\n  group(arr:any){\r\n    let dates:any = {};\r\n    arr.forEach((data) => {\r\n      dates[data.date] = null;\r\n    });\r\n    dates = Object.keys(dates);\r\n  \r\n    let datagrouped = {};\r\n    dates.forEach((date) => {\r\n      datagrouped[date] = arr.reduce((dataArr, data) => {\r\n        if(data.date == date){\r\n          dataArr.push(data);\r\n        }\r\n\r\n        return dataArr;\r\n      }, []);\r\n    });\r\n  }\r\n\r\n // choose object from ngFor results\r\n\r\n  onSelect(task) {\r\n    this.show = true;\r\n    this.selectedTask = task;\r\n  }\r\n\r\n  // remove task from list\r\n\r\n  remove(id) {\r\n    this.mockData = this.mockData.filter(item => {\r\n      if (item.id !== id) {\r\n        return item;\r\n      }\r\n    });\r\n    this.datagrouped = _.groupBy(this.mockData, \"date\");\r\n  }\r\n\r\n // create new task\r\n\r\n  create(item) {\r\n    this.mockData.unshift({\r\n      id: Date.now(),\r\n      title: item,\r\n      done: false,\r\n      date: this.formatDate(new Date())\r\n    });\r\n    this.datagrouped = _.groupBy(this.mockData, \"date\");\r\n\r\n  }\r\n\r\n\r\n\r\n  // update(title) {\r\n  //   this.mockData.map(item => {\r\n  //     if (item.id === this.id) {\r\n  //       item['title'] = title;\r\n  //     }\r\n  //   });\r\n\r\n  //   this.show = false;\r\n  // }\r\n\r\n\r\n   // remove task from list\r\n\r\n  // edit(id, title) {\r\n  //   this.show = true;\r\n  //   this.value = title;\r\n  //   this.id = id;\r\n  // }\r\n\r\n\r\n  // \r\n\r\n// Save and close task edition window\r\n\r\n  onHandleClose(){\r\n    this.show = !this.show;\r\n    this.datagrouped = _.groupBy(this.mockData, \"date\");\r\n  }\r\n\r\n\r\n// date formatting function\r\n\r\n  formatDate(date) {\r\n    var monthNames = [\r\n      \"January\", \"February\", \"March\",\r\n      \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\",\r\n      \"November\", \"December\"\r\n    ];\r\n  \r\n    var day = date.getDate();\r\n    var monthIndex = date.getMonth();\r\n    var year = date.getFullYear();\r\n  \r\n    return day + ' ' + monthNames[monthIndex] + ' ' + year;\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n}","<div class=\"col-sm-12 pt-2\">\r\n    <div class=\"col-md-12\" >\r\n        <h2>Angular ToDo App</h2>\r\n            <input type=\"text\" name=\"\" class=\"item input-lg\" #item>\r\n                <button class=\"btn btn-info btn-sm mr-2\" (click)=\"create(item.value)\">Add new task</button>\r\n                    <div *ngIf='show' >\r\n                        <app-task-detail [task]=\"selectedTask\" (close)=\"onHandleClose()\"></app-task-detail>\r\n                    </div>\r\n                    <div *ngFor=\"let date of datagrouped | keys\">\r\n                        <h4>{{date}}</h4><br><hr>\r\n                            <div *ngFor=\"let item of datagrouped[date]\">{{item.title}}<br> \r\n                                <button type=\"button\" class=\"btn btn-info btn-sm mr-2\" (click)=\"onSelect(item)\">Edit</button> \r\n                                <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"remove(item.id)\">Delete</button>\r\n                                <hr>\r\n                    </div>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}